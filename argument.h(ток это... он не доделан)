void processArguments(int argc, char* argv[]) {
    int i;
    for (i = 1; i < argc; i++) {
       
        if (strcmp(argv[i], "-c") == 0) {
            // создать архив
            printf("Опция -c: создание архива\n");
        }
        else if (strcmp(argv[i], "-x") == 0) {
            // извлечь архив
            printf("Опция -x: извлечение архива\n");
        }
        else if (strcmp(argv[i], "-l") == 0) {
            // просмотреть содержимое архива
            printf("Опция -l: просмотр содержимого архива\n");
        }
        else if (strcmp(argv[i], "-a") == 0) {
            // добавить файлы в архив
            printf("Опция -a: добавление файлов в архив\n");
        }
        else if (strcmp(argv[i], "-d") == 0) {
            // удалить файлы из архива
            printf("Опция -d: удаление файлов из архива\n");
        }
        else if (strcmp(argv[i], "-f") == 0) {
            // указать путь к архиву или к файлам для архивации
            printf("Опция -f: указание пути к архиву или файлам для архивации\n");
            if (i + 1 < argc) {
                printf("Путь к файлам/архиву: %s\n", argv[i + 1]);
                i++;
            }
        }
        else if (strcmp(argv[i], "-o") == 0) {
            // путь для сохранения архива или извлеченных файлов
            printf("Опция -o: указание пути для сохранения/извлечения\n");
            if (i + 1 < argc) {
                printf("Путь: %s\n", argv[i + 1]);
                i++;
            }
        }
        else if (strcmp(argv[i], "-v") == 0) {
            // режим с детальным выводом процесса работы
            printf("Опция -v: режим с детальным выводом\n");
        }
        else if (strcmp(argv[i], "-s") == 0) {
            // указание уровня сжатия (только для архивации)
            printf("Опция -s: указание уровня сжатия\n");
            if (i + 1 < argc) {
                printf("Уровень сжатия: %s\n", argv[i + 1]);
                i++;
            }
        }
        else {
            printf("Неизвестная опция: %s\n", argv[i]);
        }
    }
}
